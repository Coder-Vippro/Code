name: C++ Linter

on:
  push:
    paths:
      - '**.cpp'
      - '!Archived/**'
  pull_request:
    paths:
      - '**.cpp'
      - '!Archived/**'
  workflow_dispatch:

jobs:
  cpp-linter:
    name: cpp-linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for first run flag
        id: check_files
        run: |
          if [ ! -f .github/.cpp-linter-first-run ]; then
            echo "first_run=true" >> $GITHUB_OUTPUT
          else
            echo "first_run=false" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.cpp
          files_ignore: |
            Archived/**

      - name: Run cpp-linter on all files (first run)
        if: steps.check_files.outputs.first_run == 'true'
        uses: cpp-linter/cpp-linter-action@v2
        id: linter-all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          files-changed-only: false
          exclude: Archived
          thread-comments: true
          ignore-warnings: false
          database: "linter-database"
          tidy-checks: "*"
          output-file: .github/linter-results/linter-output.txt
          
      - name: Run cpp-linter on changed files (subsequent runs)
        if: steps.check_files.outputs.first_run == 'false'
        uses: cpp-linter/cpp-linter-action@v2
        id: linter-changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          files-changed-only: true
          exclude: Archived
          files: ${{ steps.changed-files.outputs.all_changed_files }}
          thread-comments: true
          ignore-warnings: false
          database: "linter-database"
          tidy-checks: "*"
          output-file: .github/linter-results/linter-output.txt
          
      - name: Commit linter results
        run: |
          mkdir -p .github/linter-results
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .github/linter-results/linter-output.txt
          git commit -m "Update linter results" || echo "No changes to commit"
          git push

      - name: Create first run flag
        if: steps.check_files.outputs.first_run == 'true'
        run: |
          mkdir -p .github
          touch .github/.cpp-linter-first-run
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .github/.cpp-linter-first-run
          git commit -m "Mark first run of cpp-linter"
          git push
          
      - name: Report linter results
        run: |
          echo "Linter results have been saved to .github/linter-results/linter-output.txt"
          echo "Summary of issues found:"
          cat .github/linter-results/linter-output.txt | grep -E "error:|warning:" | wc -l
          
      - name: Fail if linter found issues (optional)
        if: false  # Set to true if you want the workflow to fail on linter issues
        run: |
          if [ -s .github/linter-results/linter-output.txt ]; then
            exit 1
          fi